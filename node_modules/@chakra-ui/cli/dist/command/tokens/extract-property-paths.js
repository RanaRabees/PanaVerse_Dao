"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractPropertyPaths = extractPropertyPaths;
exports.printUnionMap = printUnionMap;

var _isObject = require("../../utils/is-object");

const AutoCompleteStringType = "(string & {})";

function wrapWithQuotes(value) {
  return `"${value}"`;
}

function printUnionType(values, strict = false) {
  if (!values.length) {
    return strict ? "never" : AutoCompleteStringType;
  }

  return values.map(wrapWithQuotes).concat(strict ? [] : [AutoCompleteStringType]).join(" | ");
}

function printUnionMap(unions, strict = false) {
  return Object.entries(unions).sort(([a], [b]) => a.localeCompare(b)).map(([targetKey, union]) => `${targetKey}: ${printUnionType(union, strict)};`).join("\n");
}

function extractPropertyPaths(target, maxDepth = 3) {
  if (!(0, _isObject.isObject)(target) && !Array.isArray(target) || !maxDepth) {
    return [];
  }

  return Object.entries(target).reduce((allPropertyPaths, [key, value]) => {
    if ((0, _isObject.isObject)(value)) {
      extractPropertyPaths(value, maxDepth - 1).forEach(childKey => allPropertyPaths.push(`${key}.${childKey}`));
    } else {
      allPropertyPaths.push(key);
    }

    return allPropertyPaths;
  }, []);
}